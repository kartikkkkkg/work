Okay, I will provide the code for your files based on the names you've used in your project structure: customer (Controller), customerm (Model), and custrepo (Repository).
1. customerm.java (Model)
This class will represent your Customer model. It defines the data fields and includes the manual getter and setter methods since you are not using Lombok.
// File: src/main/java/assignments/uc1/model/customerm.java

public class customerm {

    private int id;
    private String firstName;
    private String lastName;
    private String email;
    private String phone;
    private boolean active;
    private String password;
    private String role;

    // Constructors
    public customerm() {
    }

    public customerm(int id, String firstName, String lastName, String email, String phone, boolean active, String password, String role) {
        this.id = id;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.phone = phone;
        this.active = active;
        this.password = password;
        this.role = role;
    }

    // Getters and Setters
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    public boolean isActive() {
        return active;
    }

    public void setActive(boolean active) {
        this.active = active;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getRole() {
        return role;
    }

    public void setRole(String role) {
        this.role = role;
    }
}

2. custrepo.java (Repository)
This class will handle the in-memory data storage and CRUD operations. It will use a HashMap to store your customerm objects.
// File: src/main/java/assignments/uc1/repository/custrepo.java

import org.springframework.stereotype.Repository;
import java.util.HashMap;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

@Repository
public class custrepo {

    private final HashMap<Integer, customerm> customerMap = new HashMap<>();

    public customerm save(customerm customer) {
        customerMap.put(customer.getId(), customer);
        return customer;
    }

    public List<customerm> findAll() {
        return customerMap.values().stream().collect(Collectors.toList());
    }

    public Optional<customerm> findById(int id) {
        return Optional.ofNullable(customerMap.get(id));
    }

    public void deleteById(int id) {
        customerMap.remove(id);
    }

    public customerm update(int id, customerm updatedCustomer) {
        if (customerMap.containsKey(id)) {
            updatedCustomer.setId(id);
            customerMap.put(id, updatedCustomer);
            return updatedCustomer;
        }
        return null;
    }
}

3. customer.java (Controller)
This class will contain all your REST API endpoints. It is responsible for handling HTTP requests and calling the appropriate methods in your custrepo.
// File: src/main/java/assignments/uc1/controller/customer.java

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import assignments.uc1.model.customerm;
import assignments.uc1.repository.custrepo;
import java.util.List;
import java.util.Optional;

@RestController
@RequestMapping("/api/customers")
public class customer {

    private final custrepo customerRepository;

    @Autowired
    public customer(custrepo customerRepository) {
        this.customerRepository = customerRepository;
    }

    @GetMapping
    public List<customerm> getAllCustomers() {
        return customerRepository.findAll();
    }

    @GetMapping("/{id}")
    public Optional<customerm> getCustomerById(@PathVariable int id) {
        return customerRepository.findById(id);
    }

    @PostMapping
    public customerm createCustomer(@RequestBody customerm customer) {
        return customerRepository.save(customer);
    }

    @PutMapping("/{id}")
    public customerm updateCustomer(@PathVariable int id, @RequestBody customerm updatedCustomer) {
        return customerRepository.update(id, updatedCustomer);
    }

    @DeleteMapping("/{id}")
    public String deleteCustomer(@PathVariable int id) {
        customerRepository.deleteById(id);
        return "Customer with ID " + id + " has been deleted.";
    }
}


